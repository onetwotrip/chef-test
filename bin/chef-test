#!/usr/bin/env ruby
require "pathname"
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                             Pathname.new(__FILE__).realpath)

require "bundler/setup"

require 'chef/config'
require 'simple_config'
require 'mixlib/cli'
require 'chef/knife'
require 'git'
require 'logger'
require 'fileutils'

logger = Logger.new(STDOUT)
logger.formatter = proc do |severity, datetime, progname, msg|
  date_format = datetime.strftime("%Y-%m-%d %H:%M:%S")
  "[#{date_format}] [#{severity}] #{msg}\n"
end

# Vars
environment = "ci-runner-#{rand(36**6).to_s(36)}"
repo = SimpleConfig.git.url
repo_dir = 'chef.git'
branch = SimpleConfig.git.branch
chef_keyfile = File.absolute_path "#{SimpleConfig.workdir}/#{SimpleConfig.chef.apikey}"
pwd = Dir.pwd

# Settings
Chef::Config[:node_name] = SimpleConfig.chef.apiuser
Chef::Config[:client_key] = chef_keyfile
Chef::Config[:chef_server_url] = SimpleConfig.chef.url
Chef::Config[:knife][:yes] = ''
Chef::Config[:knife][:editor] = 'vim'

# Knife Opts
class KnifeCliTemplate
  include Mixlib::CLI
end
KnifeCliTemplate.option(:yes, long: '--yes')
KnifeCliTemplate.option(:disable_editing, long: '--disable-editing', :boolean => true)

# Git
logger.info("Git: clone #{repo} branch #{branch}")
g = Git::Base.clone repo, repo_dir
g.checkout branch
logger.info("Git: clone done")

logger.info("Git: merge develop")
g.merge(g.branch('develop'))

logger.info("Git: search cookbooks changes")

# Get cookbooks
logger.info("Cookbooks: search modified cookbooks")
cookbooks = g.gtree(branch).
              diff('develop').
              map(&:path).
              grep(/cookbooks\/(.*)\//).
              map{|f| f.match(/cookbooks\/([a-z\-\_]*)\//)[1] }.uniq
logger.info("Cookbooks: Find changes in: #{cookbooks}")

# Create environment
logger.info("Chef: create environment #{environment}")
Chef::Knife.run %W( environment create #{environment} --disable-editing), KnifeCliTemplate.options

# Update environment
Dir.chdir "#{repo_dir}/berks"
logger.info("Berks: install")
system "bundle exec berks install -q"
logger.info("Berks: update versions from #{branch}")
system({"BERKS_TWIKET_BRANCH" => branch}, "bundle exec berks update #{cookbooks.join(' ')} -q")
logger.info("Berks: apply versions to #{environment}")
system "bundle exec berks apply #{environment} -q"
Dir.chdir pwd

# NodeUp/Down
status = true
cookbooks.each do |cookbook|
  Dir.chdir "#{repo_dir}/cookbooks/#{cookbook}"
  status &= system({
    "CHEF_URL" => SimpleConfig.chef.url,
    "CHEF_APIUSER" => SimpleConfig.chef.apiuser,
    "CHEF_APIKEY" => chef_keyfile,
    "CHEF_ENV" => environment,
  }, "vagrant up")
  system "vagrant destroy -f"
  Dir.chdir pwd
end

# Cleanup
logger.info("Git: delete repo directory #{repo_dir}")
FileUtils.rm_rf(repo_dir)
logger.info("Chef: delete environment #{environment}")
Chef::Knife.run %W( environment delete #{environment} --yes), KnifeCliTemplate.options

# ExitStatus
exit 1 unless status
